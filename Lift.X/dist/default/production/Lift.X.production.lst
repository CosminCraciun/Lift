

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Apr 04 22:52:15 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0015                     	;# 
    34  0015                     	;# 
    35  0016                     	;# 
    36  0017                     	;# 
    37  0018                     	;# 
    38  0019                     	;# 
    39  001A                     	;# 
    40  001F                     	;# 
    41  0081                     	;# 
    42  0085                     	;# 
    43  0086                     	;# 
    44  008C                     	;# 
    45  008E                     	;# 
    46  0092                     	;# 
    47  0098                     	;# 
    48  0099                     	;# 
    49  009A                     	;# 
    50  009B                     	;# 
    51  009C                     	;# 
    52  009D                     	;# 
    53  009F                     	;# 
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  008C                     	;# 
    82  008E                     	;# 
    83  0092                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009F                     	;# 
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  008C                     	;# 
   119  008E                     	;# 
   120  0092                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009F                     	;# 
   128  000E                     _TMR1	set	14
   129  000C                     _PIR1	set	12
   130  000C                     _PIR1bits	set	12
   131  0005                     _PORTAbits	set	5
   132  0006                     _PORTBbits	set	6
   133  0010                     _T1CON	set	16
   134  0010                     _T1CONbits	set	16
   135  008C                     _PIE1bits	set	140
   136  0085                     _TRISA	set	133
   137  0085                     _TRISAbits	set	133
   138  0086                     _TRISB	set	134
   139  0086                     _TRISBbits	set	134
   140                           
   141                           	psect	cinit
   142  0011                     start_initialization:	
   143                           ; #config settings
   144                           
   145  0011                     __initialization:	
   146                           
   147                           ; Clear objects allocated to COMMON
   148  0011  01FC               	clrf	__pbssCOMMON& (0+127)
   149  0012  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   150                           
   151                           ; Clear objects allocated to BANK0
   152  0013  1383               	bcf	3,7	;select IRP bank0
   153  0014  3020               	movlw	low __pbssBANK0
   154  0015  0084               	movwf	4
   155  0016  303D               	movlw	low (__pbssBANK0+29)
   156  0017  2127               	fcall	clear_ram0
   157  0018                     end_of_initialization:	
   158                           ;End of C runtime variable initialization code
   159                           
   160  0018                     __end_of__initialization:	
   161  0018  0183               	clrf	3
   162  0019  2919               	ljmp	_main	;jump to C main() function
   163                           
   164                           	psect	bssCOMMON
   165  007C                     __pbssCOMMON:	
   166  007C                     _msPassed:	
   167  007C                     	ds	2
   168                           
   169                           	psect	bssBANK0
   170  0020                     __pbssBANK0:	
   171  0020                     _debounceStates:	
   172  0020                     	ds	10
   173  002A                     _inputs:	
   174  002A                     	ds	9
   175  0033                     _mainState:	
   176  0033                     	ds	1
   177  0034                     _tempInput:	
   178  0034                     	ds	9
   179                           
   180                           	psect	clrtext
   181  0127                     clear_ram0:	
   182                           ;	Called with FSR containing the base address, and
   183                           ;	W with the last address+1
   184                           
   185  0127  0064               	clrwdt	;clear the watchdog before getting into this loop
   186  0128                     clrloop0:	
   187  0128  0180               	clrf	0	;clear RAM location pointed to by FSR
   188  0129  0A84               	incf	4,f	;increment pointer
   189  012A  0604               	xorwf	4,w	;XOR with final address
   190  012B  1903               	btfsc	3,2	;have we reached the end yet?
   191  012C  3400               	retlw	0	;all done for this memory range, return
   192  012D  0604               	xorwf	4,w	;XOR again to restore value
   193  012E  2928               	goto	clrloop0	;do the next byte
   194                           
   195                           	psect	cstackCOMMON
   196  0070                     __pcstackCOMMON:	
   197  0070                     ?_initPorts:	
   198  0070                     ?_initTimer:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_debounceInput:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_mainInterrupt:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     debounceInput@tempState:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 1 bytes @ 0x0
   212  0070                     	ds	1
   213  0071                     debounceInput@currentState:	
   214                           
   215                           ; 1 bytes @ 0x1
   216  0071                     	ds	1
   217  0072                     ??_debounceInput:	
   218                           
   219                           ; 1 bytes @ 0x2
   220  0072                     	ds	1
   221  0073                     debounceInput@input:	
   222                           
   223                           ; 1 bytes @ 0x3
   224  0073                     	ds	1
   225  0074                     ??_mainInterrupt:	
   226                           
   227                           ; 1 bytes @ 0x4
   228  0074                     	ds	8
   229                           
   230                           	psect	cstackBANK0
   231  003D                     __pcstackBANK0:	
   232  003D                     ??_initPorts:	
   233  003D                     ??_initTimer:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  003D                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  003D                     main@argc:	
   240                           ; 2 bytes @ 0x0
   241                           
   242                           
   243                           ; 2 bytes @ 0x0
   244  003D                     	ds	2
   245  003F                     main@argv:	
   246                           
   247                           ; 2 bytes @ 0x2
   248  003F                     	ds	2
   249  0041                     ??_main:	
   250                           
   251                           	psect	maintext
   252  0119                     __pmaintext:	
   253                           ; 1 bytes @ 0x4
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 27 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;  argc            2    0[BANK0 ] int 
   262 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   263 ;; Auto vars:     Size  Location     Type
   264 ;;		None
   265 ;; Return value:  Size  Location     Type
   266 ;;                  2    0[BANK0 ] int 
   267 ;; Registers used:
   268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   269 ;; Tracked objects:
   270 ;;		On entry : B00/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   274 ;;      Params:         0       4       0       0
   275 ;;      Locals:         0       0       0       0
   276 ;;      Temps:          0       0       0       0
   277 ;;      Totals:         0       4       0       0
   278 ;;Total ram usage:        4 bytes
   279 ;; Hardware stack levels required when called:    3
   280 ;; This function calls:
   281 ;;		_initPorts
   282 ;;		_initTimer
   283 ;; This function is called by:
   284 ;;		Startup code after reset
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           
   289                           ;psect for function _main
   290  0119                     _main:	
   291                           
   292                           ;main.c: 29: initPorts();
   293                           
   294                           ;incstack = 0
   295                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   296  0119  20DA               	fcall	_initPorts
   297                           
   298                           ;main.c: 30: initTimer();
   299  011A  210A               	fcall	_initTimer
   300                           
   301                           ;main.c: 32: mainState = 0;
   302  011B  1283               	bcf	3,5	;RP0=0, select bank0
   303  011C  1303               	bcf	3,6	;RP1=0, select bank0
   304  011D                     l689:	
   305                           ;main.c: 51: default:
   306                           
   307                           ;main.c: 46: {
   308                           ;main.c: 49: }
   309                           ;main.c: 50: break;
   310                           
   311                           ;main.c: 45: case 1 :
   312                           
   313                           ;main.c: 40: {
   314                           ;main.c: 42: ;
   315                           ;main.c: 43: }
   316                           ;main.c: 44: break;
   317                           
   318                           ;main.c: 38: {
   319                           ;main.c: 39: case 0 :
   320                           
   321                           ;main.c: 36: {
   322                           ;main.c: 37: switch (mainState)
   323                           
   324                           ;main.c: 35: while (1)
   325                           
   326                           
   327                           ;main.c: 52: {
   328                           ;main.c: 53: mainState = 0;
   329  011D  01B3               	clrf	_mainState
   330  011E                     l691:	
   331                           ;main.c: 54: }
   332                           ;main.c: 55: }
   333                           
   334  011E  0833               	movf	_mainState,w
   335                           
   336                           ; Switch size 1, requested type "space"
   337                           ; Number of cases is 2, Range of values is 0 to 1
   338                           ; switch strategies available:
   339                           ; Name         Instructions Cycles
   340                           ; simple_byte            7     4 (average)
   341                           ; direct_byte            8     6 (fixed)
   342                           ; jumptable            260     6 (fixed)
   343                           ;	Chosen strategy is simple_byte
   344  011F  3A00               	xorlw	0	; case 0
   345  0120  1903               	skipnz
   346  0121  291E               	goto	l691
   347  0122  3A01               	xorlw	1	; case 1
   348  0123  1903               	skipnz
   349  0124  291E               	goto	l691
   350  0125  291D               	goto	l689
   351  0126  291E               	goto	l691
   352  0127                     __end_of_main:	
   353                           ;main.c: 56: }
   354                           ;main.c: 58: return (0);
   355                           ;	Return value of _main is never used
   356                           
   357                           
   358                           	psect	text1
   359  010A                     __ptext1:	
   360 ;; *************** function _initTimer *****************
   361 ;; Defined at:
   362 ;;		line 6 in file "timer.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   376 ;;      Params:         0       0       0       0
   377 ;;      Locals:         0       0       0       0
   378 ;;      Temps:          0       0       0       0
   379 ;;      Totals:         0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used:    1
   382 ;; Hardware stack levels required when called:    2
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _initTimer
   392  010A                     _initTimer:	
   393                           
   394                           ;timer.c: 9: T1CON = 0;
   395                           
   396                           ;incstack = 0
   397                           ; Regs used in _initTimer: [wreg+status,2+status,0]
   398  010A  1283               	bcf	3,5	;RP0=0, select bank0
   399  010B  1303               	bcf	3,6	;RP1=0, select bank0
   400  010C  0190               	clrf	16	;volatile
   401                           
   402                           ;timer.c: 12: T1CONbits.T1CKPS = 0b11;
   403  010D  3030               	movlw	48
   404  010E  0490               	iorwf	16,f	;volatile
   405                           
   406                           ;timer.c: 13: TMR1 = 0xFFFF - 625;
   407  010F  30FD               	movlw	253
   408  0110  008F               	movwf	15	;volatile
   409  0111  308E               	movlw	142
   410  0112  008E               	movwf	14	;volatile
   411                           
   412                           ;timer.c: 16: PIR1bits.TMR1IF = 0;
   413  0113  100C               	bcf	12,0	;volatile
   414                           
   415                           ;timer.c: 19: T1CONbits.TMR1ON = 1;
   416  0114  1410               	bsf	16,0	;volatile
   417                           
   418                           ;timer.c: 22: PIE1bits.TMR1IE = 1;
   419  0115  1683               	bsf	3,5	;RP0=1, select bank1
   420  0116  1303               	bcf	3,6	;RP1=0, select bank1
   421  0117  140C               	bsf	12,0	;volatile
   422  0118  0008               	return
   423  0119                     __end_of_initTimer:	
   424                           
   425                           	psect	text2
   426  00DA                     __ptext2:	
   427 ;; *************** function _initPorts *****************
   428 ;; Defined at:
   429 ;;		line 11 in file "ports.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   443 ;;      Params:         0       0       0       0
   444 ;;      Locals:         0       0       0       0
   445 ;;      Temps:          0       0       0       0
   446 ;;      Totals:         0       0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels used:    1
   449 ;; Hardware stack levels required when called:    2
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _initPorts
   459  00DA                     _initPorts:	
   460                           
   461                           ;ports.c: 14: TRISA = 0xFF;
   462                           
   463                           ;incstack = 0
   464                           ; Regs used in _initPorts: [wreg]
   465  00DA  30FF               	movlw	255
   466  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   467  00DC  1303               	bcf	3,6	;RP1=0, select bank1
   468  00DD  0085               	movwf	5	;volatile
   469                           
   470                           ;ports.c: 15: TRISB = 0xFF;
   471  00DE  30FF               	movlw	255
   472  00DF  0086               	movwf	6	;volatile
   473                           
   474                           ;ports.c: 17: TRISAbits.TRISA2 = 0;
   475  00E0  1105               	bcf	5,2	;volatile
   476                           
   477                           ;ports.c: 18: TRISAbits.TRISA3 = 0;
   478  00E1  1185               	bcf	5,3	;volatile
   479                           
   480                           ;ports.c: 19: TRISAbits.TRISA4 = 0;
   481  00E2  1205               	bcf	5,4	;volatile
   482                           
   483                           ;ports.c: 21: TRISAbits.TRISA5 = 1;
   484  00E3  1685               	bsf	5,5	;volatile
   485                           
   486                           ;ports.c: 22: TRISBbits.TRISB0 = 1;
   487  00E4  1406               	bsf	6,0	;volatile
   488                           
   489                           ;ports.c: 23: TRISBbits.TRISB3 = 1;
   490  00E5  1586               	bsf	6,3	;volatile
   491                           
   492                           ;ports.c: 25: TRISBbits.TRISB6 = 1;
   493  00E6  1706               	bsf	6,6	;volatile
   494                           
   495                           ;ports.c: 26: TRISBbits.TRISB7 = 1;
   496  00E7  1786               	bsf	6,7	;volatile
   497                           
   498                           ;ports.c: 27: TRISAbits.TRISA6 = 1;
   499  00E8  1705               	bsf	5,6	;volatile
   500                           
   501                           ;ports.c: 29: PORTBbits.RB4 = 0;
   502  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   503  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   504  00EB  1206               	bcf	6,4	;volatile
   505                           
   506                           ;ports.c: 30: PORTBbits.RB5 = 0;
   507  00EC  1286               	bcf	6,5	;volatile
   508                           
   509                           ;ports.c: 32: TRISBbits.TRISB6 = 1;
   510  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   511  00EE  1303               	bcf	3,6	;RP1=0, select bank1
   512  00EF  1706               	bsf	6,6	;volatile
   513                           
   514                           ;ports.c: 33: TRISBbits.TRISB7 = 1;
   515  00F0  1786               	bsf	6,7	;volatile
   516                           
   517                           ;ports.c: 34: TRISAbits.TRISA6 = 1;
   518  00F1  1705               	bsf	5,6	;volatile
   519                           
   520                           ;ports.c: 36: TRISAbits.TRISA7 = 1;
   521  00F2  1785               	bsf	5,7	;volatile
   522                           
   523                           ;ports.c: 37: TRISAbits.TRISA0 = 1;
   524  00F3  1405               	bsf	5,0	;volatile
   525                           
   526                           ;ports.c: 39: TRISAbits.TRISA1 = 1;
   527  00F4  1485               	bsf	5,1	;volatile
   528  00F5  0008               	return
   529  00F6                     __end_of_initPorts:	
   530                           
   531                           	psect	text3
   532  001A                     __ptext3:	
   533 ;; *************** function _mainInterrupt *****************
   534 ;; Defined at:
   535 ;;		line 63 in file "main.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   549 ;;      Params:         0       0       0       0
   550 ;;      Locals:         0       0       0       0
   551 ;;      Temps:          8       0       0       0
   552 ;;      Totals:         8       0       0       0
   553 ;;Total ram usage:        8 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:    1
   556 ;; This function calls:
   557 ;;		_debounceInput
   558 ;; This function is called by:
   559 ;;		Interrupt level 1
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           
   564                           ;psect for function _mainInterrupt
   565  001A                     _mainInterrupt:	
   566                           
   567                           ;main.c: 66: if ( 1 == PIR1bits.TMR1IF )
   568  001A  1C0C               	btfss	12,0	;volatile
   569  001B  28CE               	goto	i1l701
   570                           
   571                           ;main.c: 67: {
   572                           ;main.c: 68: msPassed++;
   573  001C  3001               	movlw	1
   574  001D  07FC               	addwf	_msPassed,f
   575  001E  1803               	skipnc
   576  001F  0AFD               	incf	_msPassed+1,f
   577  0020  3000               	movlw	0
   578  0021  07FD               	addwf	_msPassed+1,f
   579                           
   580                           ;main.c: 70: if (0 == msPassed % 4)
   581  0022  3003               	movlw	3
   582  0023  057C               	andwf	_msPassed,w
   583  0024  00F4               	movwf	??_mainInterrupt
   584  0025  3000               	movlw	0
   585  0026  057D               	andwf	_msPassed+1,w
   586  0027  00F5               	movwf	??_mainInterrupt+1
   587  0028  0874               	movf	??_mainInterrupt,w
   588  0029  0475               	iorwf	??_mainInterrupt+1,w
   589  002A  1D03               	btfss	3,2
   590  002B  28CE               	goto	i1l701
   591                           
   592                           ;main.c: 71: {
   593                           ;main.c: 72: inputs[BUTTON_0_POS] = debounceInput(PORTAbits.RA5,tempInput + BUTTON_0_POS
      +                          , inputs[BUTTON_0_POS]);
   594  002C  3034               	movlw	(low (_tempInput| 0))& (0+255)
   595  002D  00F4               	movwf	??_mainInterrupt
   596  002E  0874               	movf	??_mainInterrupt,w
   597  002F  00F0               	movwf	debounceInput@tempState
   598  0030  082A               	movf	_inputs,w
   599  0031  00F5               	movwf	??_mainInterrupt+1
   600  0032  0875               	movf	??_mainInterrupt+1,w
   601  0033  00F1               	movwf	debounceInput@currentState
   602  0034  0E05               	swapf	5,w	;volatile
   603  0035  00F6               	movwf	??_mainInterrupt+2
   604  0036  0C76               	rrf	??_mainInterrupt+2,w
   605  0037  3901               	andlw	1
   606  0038  20F6               	fcall	_debounceInput
   607  0039  00F7               	movwf	??_mainInterrupt+3
   608  003A  0877               	movf	??_mainInterrupt+3,w
   609  003B  1283               	bcf	3,5	;RP0=0, select bank0
   610  003C  1303               	bcf	3,6	;RP1=0, select bank0
   611  003D  00AA               	movwf	_inputs
   612                           
   613                           ;main.c: 73: inputs[BUTTON_1_POS] = debounceInput(PORTAbits.RA5,tempInput + BUTTON_1_POS
      +                          , inputs[BUTTON_1_POS]);
   614  003E  3035               	movlw	(low ((_tempInput| 0+1)))& (0+255)
   615  003F  00F4               	movwf	??_mainInterrupt
   616  0040  0874               	movf	??_mainInterrupt,w
   617  0041  00F0               	movwf	debounceInput@tempState
   618  0042  082B               	movf	_inputs+1,w
   619  0043  00F5               	movwf	??_mainInterrupt+1
   620  0044  0875               	movf	??_mainInterrupt+1,w
   621  0045  00F1               	movwf	debounceInput@currentState
   622  0046  0E05               	swapf	5,w	;volatile
   623  0047  00F6               	movwf	??_mainInterrupt+2
   624  0048  0C76               	rrf	??_mainInterrupt+2,w
   625  0049  3901               	andlw	1
   626  004A  20F6               	fcall	_debounceInput
   627  004B  00F7               	movwf	??_mainInterrupt+3
   628  004C  0877               	movf	??_mainInterrupt+3,w
   629  004D  1283               	bcf	3,5	;RP0=0, select bank0
   630  004E  1303               	bcf	3,6	;RP1=0, select bank0
   631  004F  00AB               	movwf	_inputs+1
   632                           
   633                           ;main.c: 74: inputs[BUTTON_2_POS] = debounceInput(PORTAbits.RA5,tempInput + BUTTON_2_POS
      +                          , inputs[BUTTON_2_POS]);
   634  0050  3036               	movlw	(low ((_tempInput| 0+2)))& (0+255)
   635  0051  00F4               	movwf	??_mainInterrupt
   636  0052  0874               	movf	??_mainInterrupt,w
   637  0053  00F0               	movwf	debounceInput@tempState
   638  0054  082C               	movf	_inputs+2,w
   639  0055  00F5               	movwf	??_mainInterrupt+1
   640  0056  0875               	movf	??_mainInterrupt+1,w
   641  0057  00F1               	movwf	debounceInput@currentState
   642  0058  0E05               	swapf	5,w	;volatile
   643  0059  00F6               	movwf	??_mainInterrupt+2
   644  005A  0C76               	rrf	??_mainInterrupt+2,w
   645  005B  3901               	andlw	1
   646  005C  20F6               	fcall	_debounceInput
   647  005D  00F7               	movwf	??_mainInterrupt+3
   648  005E  0877               	movf	??_mainInterrupt+3,w
   649  005F  1283               	bcf	3,5	;RP0=0, select bank0
   650  0060  1303               	bcf	3,6	;RP1=0, select bank0
   651  0061  00AC               	movwf	_inputs+2
   652                           
   653                           ;main.c: 75: inputs[SAFETY_1_POS] = debounceInput(PORTAbits.RA5,tempInput + SAFETY_1_POS
      +                          , inputs[SAFETY_1_POS]);
   654  0062  3037               	movlw	(low ((_tempInput| 0+3)))& (0+255)
   655  0063  00F4               	movwf	??_mainInterrupt
   656  0064  0874               	movf	??_mainInterrupt,w
   657  0065  00F0               	movwf	debounceInput@tempState
   658  0066  082D               	movf	_inputs+3,w
   659  0067  00F5               	movwf	??_mainInterrupt+1
   660  0068  0875               	movf	??_mainInterrupt+1,w
   661  0069  00F1               	movwf	debounceInput@currentState
   662  006A  0E05               	swapf	5,w	;volatile
   663  006B  00F6               	movwf	??_mainInterrupt+2
   664  006C  0C76               	rrf	??_mainInterrupt+2,w
   665  006D  3901               	andlw	1
   666  006E  20F6               	fcall	_debounceInput
   667  006F  00F7               	movwf	??_mainInterrupt+3
   668  0070  0877               	movf	??_mainInterrupt+3,w
   669  0071  1283               	bcf	3,5	;RP0=0, select bank0
   670  0072  1303               	bcf	3,6	;RP1=0, select bank0
   671  0073  00AD               	movwf	_inputs+3
   672                           
   673                           ;main.c: 76: inputs[SAFETY_2_POS] = debounceInput(PORTAbits.RA5,tempInput + SAFETY_2_POS
      +                          , inputs[SAFETY_2_POS]);
   674  0074  3038               	movlw	(low ((_tempInput| 0+4)))& (0+255)
   675  0075  00F4               	movwf	??_mainInterrupt
   676  0076  0874               	movf	??_mainInterrupt,w
   677  0077  00F0               	movwf	debounceInput@tempState
   678  0078  082E               	movf	_inputs+4,w
   679  0079  00F5               	movwf	??_mainInterrupt+1
   680  007A  0875               	movf	??_mainInterrupt+1,w
   681  007B  00F1               	movwf	debounceInput@currentState
   682  007C  0E05               	swapf	5,w	;volatile
   683  007D  00F6               	movwf	??_mainInterrupt+2
   684  007E  0C76               	rrf	??_mainInterrupt+2,w
   685  007F  3901               	andlw	1
   686  0080  20F6               	fcall	_debounceInput
   687  0081  00F7               	movwf	??_mainInterrupt+3
   688  0082  0877               	movf	??_mainInterrupt+3,w
   689  0083  1283               	bcf	3,5	;RP0=0, select bank0
   690  0084  1303               	bcf	3,6	;RP1=0, select bank0
   691  0085  00AE               	movwf	_inputs+4
   692                           
   693                           ;main.c: 77: inputs[SAFETY_3_POS] = debounceInput(PORTAbits.RA5,tempInput + SAFETY_3_POS
      +                          , inputs[SAFETY_3_POS]);
   694  0086  3039               	movlw	(low ((_tempInput| 0+5)))& (0+255)
   695  0087  00F4               	movwf	??_mainInterrupt
   696  0088  0874               	movf	??_mainInterrupt,w
   697  0089  00F0               	movwf	debounceInput@tempState
   698  008A  082F               	movf	_inputs+5,w
   699  008B  00F5               	movwf	??_mainInterrupt+1
   700  008C  0875               	movf	??_mainInterrupt+1,w
   701  008D  00F1               	movwf	debounceInput@currentState
   702  008E  0E05               	swapf	5,w	;volatile
   703  008F  00F6               	movwf	??_mainInterrupt+2
   704  0090  0C76               	rrf	??_mainInterrupt+2,w
   705  0091  3901               	andlw	1
   706  0092  20F6               	fcall	_debounceInput
   707  0093  00F7               	movwf	??_mainInterrupt+3
   708  0094  0877               	movf	??_mainInterrupt+3,w
   709  0095  1283               	bcf	3,5	;RP0=0, select bank0
   710  0096  1303               	bcf	3,6	;RP1=0, select bank0
   711  0097  00AF               	movwf	_inputs+5
   712                           
   713                           ;main.c: 78: inputs[DELIMITER_DOWN_POS] = debounceInput(PORTAbits.RA5,tempInput + DELIMI
      +                          TER_DOWN_POS, inputs[DELIMITER_DOWN_POS]);
   714  0098  303A               	movlw	(low ((_tempInput| 0+6)))& (0+255)
   715  0099  00F4               	movwf	??_mainInterrupt
   716  009A  0874               	movf	??_mainInterrupt,w
   717  009B  00F0               	movwf	debounceInput@tempState
   718  009C  0830               	movf	_inputs+6,w
   719  009D  00F5               	movwf	??_mainInterrupt+1
   720  009E  0875               	movf	??_mainInterrupt+1,w
   721  009F  00F1               	movwf	debounceInput@currentState
   722  00A0  0E05               	swapf	5,w	;volatile
   723  00A1  00F6               	movwf	??_mainInterrupt+2
   724  00A2  0C76               	rrf	??_mainInterrupt+2,w
   725  00A3  3901               	andlw	1
   726  00A4  20F6               	fcall	_debounceInput
   727  00A5  00F7               	movwf	??_mainInterrupt+3
   728  00A6  0877               	movf	??_mainInterrupt+3,w
   729  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   730  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   731  00A9  00B0               	movwf	_inputs+6
   732                           
   733                           ;main.c: 79: inputs[DELIMITER_UP_POS] = debounceInput(PORTAbits.RA5,tempInput + DELIMITE
      +                          R_UP_POS, inputs[DELIMITER_UP_POS]);
   734  00AA  303B               	movlw	(low ((_tempInput| 0+7)))& (0+255)
   735  00AB  00F4               	movwf	??_mainInterrupt
   736  00AC  0874               	movf	??_mainInterrupt,w
   737  00AD  00F0               	movwf	debounceInput@tempState
   738  00AE  0831               	movf	_inputs+7,w
   739  00AF  00F5               	movwf	??_mainInterrupt+1
   740  00B0  0875               	movf	??_mainInterrupt+1,w
   741  00B1  00F1               	movwf	debounceInput@currentState
   742  00B2  0E05               	swapf	5,w	;volatile
   743  00B3  00F6               	movwf	??_mainInterrupt+2
   744  00B4  0C76               	rrf	??_mainInterrupt+2,w
   745  00B5  3901               	andlw	1
   746  00B6  20F6               	fcall	_debounceInput
   747  00B7  00F7               	movwf	??_mainInterrupt+3
   748  00B8  0877               	movf	??_mainInterrupt+3,w
   749  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   750  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   751  00BB  00B1               	movwf	_inputs+7
   752                           
   753                           ;main.c: 80: inputs[COUNTER_POS] = debounceInput(PORTAbits.RA5,tempInput + COUNTER_POS, 
      +                          inputs[COUNTER_POS]);
   754  00BC  303C               	movlw	(low ((_tempInput| 0+8)))& (0+255)
   755  00BD  00F4               	movwf	??_mainInterrupt
   756  00BE  0874               	movf	??_mainInterrupt,w
   757  00BF  00F0               	movwf	debounceInput@tempState
   758  00C0  0832               	movf	_inputs+8,w
   759  00C1  00F5               	movwf	??_mainInterrupt+1
   760  00C2  0875               	movf	??_mainInterrupt+1,w
   761  00C3  00F1               	movwf	debounceInput@currentState
   762  00C4  0E05               	swapf	5,w	;volatile
   763  00C5  00F6               	movwf	??_mainInterrupt+2
   764  00C6  0C76               	rrf	??_mainInterrupt+2,w
   765  00C7  3901               	andlw	1
   766  00C8  20F6               	fcall	_debounceInput
   767  00C9  00F7               	movwf	??_mainInterrupt+3
   768  00CA  0877               	movf	??_mainInterrupt+3,w
   769  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   770  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   771  00CD  00B2               	movwf	_inputs+8
   772  00CE                     i1l701:	
   773                           
   774                           ;main.c: 81: }
   775                           ;main.c: 82: }
   776                           ;main.c: 85: PIR1 = 0;
   777  00CE  018C               	clrf	12	;volatile
   778  00CF  087B               	movf	??_mainInterrupt+7,w
   779  00D0  00FF               	movwf	127
   780  00D1  087A               	movf	??_mainInterrupt+6,w
   781  00D2  008A               	movwf	10
   782  00D3  0879               	movf	??_mainInterrupt+5,w
   783  00D4  0084               	movwf	4
   784  00D5  0E78               	swapf	(??_mainInterrupt+4)^(0+-128),w
   785  00D6  0083               	movwf	3
   786  00D7  0EFE               	swapf	126,f
   787  00D8  0E7E               	swapf	126,w
   788  00D9  0009               	retfie
   789  00DA                     __end_of_mainInterrupt:	
   790                           
   791                           	psect	intentry
   792  0004                     __pintentry:	
   793                           ;incstack = 0
   794                           ; Regs used in _mainInterrupt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   795                           
   796  0004                     interrupt_function:	
   797  007E                     saved_w	set	btemp
   798  0004  00FE               	movwf	btemp
   799  0005  0E03               	swapf	3,w
   800  0006  00F8               	movwf	??_mainInterrupt+4
   801  0007  0804               	movf	4,w
   802  0008  00F9               	movwf	??_mainInterrupt+5
   803  0009  080A               	movf	10,w
   804  000A  00FA               	movwf	??_mainInterrupt+6
   805  000B  1283               	bcf	3,5	;RP0=0, select bank0
   806  000C  1303               	bcf	3,6	;RP1=0, select bank0
   807  000D  087F               	movf	btemp+1,w
   808  000E  00FB               	movwf	??_mainInterrupt+7
   809  000F  281A               	ljmp	_mainInterrupt
   810                           
   811                           	psect	text4
   812  00F6                     __ptext4:	
   813 ;; *************** function _debounceInput *****************
   814 ;; Defined at:
   815 ;;		line 42 in file "ports.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  input           1    wreg     unsigned char 
   818 ;;  tempState       1    0[COMMON] PTR unsigned char 
   819 ;;		 -> tempInput(9), 
   820 ;;  currentState    1    1[COMMON] unsigned char 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  input           1    3[COMMON] unsigned char 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      unsigned char 
   825 ;; Registers used:
   826 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   832 ;;      Params:         2       0       0       0
   833 ;;      Locals:         1       0       0       0
   834 ;;      Temps:          1       0       0       0
   835 ;;      Totals:         4       0       0       0
   836 ;;Total ram usage:        4 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_mainInterrupt
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _debounceInput
   847  00F6                     _debounceInput:	
   848                           
   849                           ;incstack = 0
   850                           ; Regs used in _debounceInput: [wreg-fsr0h+status,2+status,0]
   851                           ;debounceInput@input stored from wreg
   852  00F6  00F3               	movwf	debounceInput@input
   853                           
   854                           ;ports.c: 44: *tempState <<= 1;
   855  00F7  0870               	movf	debounceInput@tempState,w
   856  00F8  0084               	movwf	4
   857  00F9  1003               	clrc
   858  00FA  1383               	bcf	3,7	;select IRP bank0
   859  00FB  0D80               	rlf	0,f
   860                           
   861                           ;ports.c: 45: *tempState |= input;
   862  00FC  0873               	movf	debounceInput@input,w
   863  00FD  00F2               	movwf	??_debounceInput
   864  00FE  0870               	movf	debounceInput@tempState,w
   865  00FF  0084               	movwf	4
   866  0100  0872               	movf	??_debounceInput,w
   867  0101  0480               	iorwf	0,f
   868                           
   869                           ;ports.c: 51: else if ( 0xFF == 0xFF & debounceStates[0])
   870                           
   871                           ;ports.c: 50: }
   872                           
   873                           ;ports.c: 48: {
   874                           ;ports.c: 49: return 0;
   875                           
   876                           ;ports.c: 47: if ( 0 == 0xFF & debounceStates[0])
   877  0102  1283               	bcf	3,5	;RP0=0, select bank0
   878  0103  1303               	bcf	3,6	;RP1=0, select bank0
   879  0104  1C20               	btfss	_debounceStates,0
   880  0105  2908               	goto	i1l681
   881                           
   882                           ;ports.c: 52: {
   883                           ;ports.c: 53: return 1;
   884  0106  3001               	movlw	1
   885                           
   886                           ;ports.c: 54: }
   887  0107  0008               	return
   888  0108                     i1l681:	
   889                           
   890                           ;ports.c: 55: else return currentState;
   891  0108  0871               	movf	debounceInput@currentState,w
   892  0109  0008               	return
   893  010A                     __end_of_debounceInput:	
   894  007E                     btemp	set	126	;btemp
   895  007E                     wtemp	set	126
   896  007E                     wtemp0	set	126
   897  0080                     wtemp1	set	128
   898  0082                     wtemp2	set	130
   899  0084                     wtemp3	set	132
   900  0086                     wtemp4	set	134
   901  0088                     wtemp5	set	136
   902  007F                     wtemp6	set	127
   903  007E                     ttemp	set	126
   904  007E                     ttemp0	set	126
   905  0081                     ttemp1	set	129
   906  0084                     ttemp2	set	132
   907  0087                     ttemp3	set	135
   908  007F                     ttemp4	set	127
   909  007E                     ltemp	set	126
   910  007E                     ltemp0	set	126
   911  0082                     ltemp1	set	130
   912  0086                     ltemp2	set	134
   913  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      4      33
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    debounceInput@tempState	PTR unsigned char  size(1) Largest target is 9
		 -> tempInput(BANK0[9]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _mainInterrupt in COMMON

    _mainInterrupt->_debounceInput

Critical Paths under _main in BANK0

    None.

Critical Paths under _mainInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _mainInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _mainInterrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4       0
                                              0 BANK0      4     0      4
                          _initPorts
                          _initTimer
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _mainInterrupt                                        8     8      0    1042
                                              4 COMMON     8     8      0
                      _debounceInput
 ---------------------------------------------------------------------------------
 (3) _debounceInput                                        4     2      2    1042
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initPorts
   _initTimer

 _mainInterrupt (ROOT)
   _debounceInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      4      21       3       41.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      2F      10        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Apr 04 22:52:15 2016

                       fsr 0004              _mainInterrupt 001A                        l691 011E  
                      l689 011D                        fsr0 0004                        indf 0000  
                     _PIR1 000C                       _TMR1 000E                       _main 0119  
                     btemp 007E                       ltemp 007E                       start 0010  
                     ttemp 007E                       wtemp 007E             ?_mainInterrupt 0070  
                    ?_main 003D                      _T1CON 0010                      i1l701 00CE  
                    i1l681 0108                      _TRISA 0085                      _TRISB 0086  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080      __end_of_debounceInput 010A  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            __initialization 0011               __end_of_main 0127  
                   ??_main 0041             _debounceStates 0020            ??_mainInterrupt 0074  
                   _inputs 002A                     saved_w 007E    __end_of__initialization 0018  
           __pcstackCOMMON 0070         debounceInput@input 0073                 __pbssBANK0 0020  
       __size_of_initTimer 000F         __size_of_initPorts 001C                 __pmaintext 0119  
               __pintentry 0004                    __ptext1 010A                    __ptext2 00DA  
                  __ptext3 001A                    __ptext4 00F6                  _T1CONbits 0010  
        __end_of_initTimer 0119          __end_of_initPorts 00F6                    clrloop0 0128  
     end_of_initialization 0018                  _PORTAbits 0005                  _PORTBbits 0006  
   __size_of_debounceInput 0014                  _TRISAbits 0085                  _TRISBbits 0086  
    __end_of_mainInterrupt 00DA        start_initialization 0011              _debounceInput 00F6  
              __pbssCOMMON 007C                  ___latbits 0000              __pcstackBANK0 003D  
           ?_debounceInput 0070     debounceInput@tempState 0070                  _mainState 0033  
                _initTimer 010A                  _initPorts 00DA          interrupt_function 0004  
                clear_ram0 0127                   _PIE1bits 008C                  _tempInput 0034  
                 _PIR1bits 000C                 ?_initTimer 0070                 ?_initPorts 0070  
          ??_debounceInput 0072  debounceInput@currentState 0071                   _msPassed 007C  
            __size_of_main 000E                   main@argc 003D                   main@argv 003F  
              ??_initTimer 003D                ??_initPorts 003D                   intlevel1 0000  
   __size_of_mainInterrupt 00C0  
